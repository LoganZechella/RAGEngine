#!/bin/bash
set -e

echo "üöÄ Starting Breath Diagnostics RAGEngine Web Application"

# Wait for Qdrant to be ready
echo "‚è≥ Waiting for Qdrant to be ready..."
until curl -s "http://qdrant:6333/collections" > /dev/null 2>&1; do
    echo "Waiting for Qdrant..."
    sleep 2
done
echo "‚úÖ Qdrant is ready"

# Read API keys from Docker secrets and export as environment variables
echo "üîê Loading API keys from secrets..."

if [ -f "/run/secrets/openai_api_key" ]; then
    export OPENAI_API_KEY=$(cat /run/secrets/openai_api_key)
    echo "‚úÖ OpenAI API key loaded from secrets"
else
    echo "‚ùå Error: OpenAI API key secret file not found at /run/secrets/openai_api_key"
    exit 1
fi

if [ -f "/run/secrets/google_api_key" ]; then
    export GOOGLE_API_KEY=$(cat /run/secrets/google_api_key)
    echo "‚úÖ Google API key loaded from secrets"
else
    echo "‚ö†Ô∏è  Warning: Google API key secret file not found at /run/secrets/google_api_key"
    echo "   Google API features will be disabled"
fi

# Set up environment
export PYTHONPATH="/app/backend:$PYTHONPATH"

# Verify required environment variables are now set
if [ -z "$OPENAI_API_KEY" ]; then
    echo "‚ùå Error: OPENAI_API_KEY not set after reading secrets"
    exit 1
fi

echo "üîß Configuration:"
echo "  ‚Ä¢ Qdrant URL: ${QDRANT_URL}"
echo "  ‚Ä¢ Default Collection: ${DEFAULT_COLLECTION}"
echo "  ‚Ä¢ Available Collections: ${AVAILABLE_COLLECTIONS}"
echo "  ‚Ä¢ Document Directory: ${SOURCE_DOCUMENTS_DIR}"
echo "  ‚Ä¢ OpenAI API Key: [LOADED]"
echo "  ‚Ä¢ Google API Key: $([ -n "$GOOGLE_API_KEY" ] && echo "[LOADED]" || echo "[NOT SET]")"

# Execute the command
echo "üöÄ Starting web application..."
exec "$@" 