# =============================================================================
# RAGEngine Docker Compose Configuration
# Production-ready multi-container setup
# =============================================================================

version: '3.9'

services:
  # =============================================================================
  # Qdrant Vector Database
  # =============================================================================
  qdrant:
    image: qdrant/qdrant:latest
    container_name: ragengine-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"  # gRPC port
    volumes:
      - qdrant_data:/qdrant/storage
      - ./docker/qdrant/config.yaml:/qdrant/config/production.yaml:ro
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - ragengine-network

  # =============================================================================
  # RAGEngine Backend (FastAPI)
  # =============================================================================
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: ragengine-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      qdrant:
        condition: service_healthy
    environment:
      # Docker Environment
      - DOCKER_ENV=true
      
      # Database Configuration
      - QDRANT_URL=http://qdrant:6333
      - COLLECTION_NAME=${COLLECTION_NAME:-knowledge_base}
      
      # Document Processing
      - SOURCE_DOCUMENTS_DIR=/app/documents
      - CHUNKING_STRATEGY=${CHUNKING_STRATEGY:-hybrid_hierarchical_semantic}
      - CHUNK_SIZE_TOKENS=${CHUNK_SIZE_TOKENS:-512}
      - CHUNK_OVERLAP_TOKENS=${CHUNK_OVERLAP_TOKENS:-100}
      - VECTOR_DIMENSIONS=${VECTOR_DIMENSIONS:-1536}
      
      # Search Configuration
      - TOP_K_DENSE=${TOP_K_DENSE:-10}
      - TOP_K_SPARSE=${TOP_K_SPARSE:-10}
      - TOP_K_RERANK=${TOP_K_RERANK:-5}
      
      # System Configuration
      - TZ=${TZ:-UTC}
    secrets:
      - openai_api_key
      - google_api_key
    volumes:
      - documents_data:/app/documents
      - manifests_data:/app/config
      - logs_data:/app/logs
    entrypoint: ["/docker/backend/entrypoint.sh"]
    command: ["python", "run_web.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/system-info"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - ragengine-network

  # =============================================================================
  # RAGEngine Frontend (SvelteKit)
  # =============================================================================
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: ragengine-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - VITE_API_BASE_URL=http://backend:8080
      - NODE_ENV=production
      - TZ=${TZ:-UTC}
    entrypoint: ["/docker/frontend/entrypoint.sh"]
    command: ["node", "build"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - ragengine-network

# =============================================================================
# Docker Secrets
# =============================================================================
secrets:
  openai_api_key:
    file: ./secrets/openai_api_key.txt
  google_api_key:
    file: ./secrets/google_api_key.txt

# =============================================================================
# Named Volumes
# =============================================================================
volumes:
  qdrant_data:
    driver: local
  documents_data:
    driver: local
  manifests_data:
    driver: local
  logs_data:
    driver: local

# =============================================================================
# Custom Network
# =============================================================================
networks:
  ragengine-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16